from fastapi import FastAPI, Request, HTTPException
from fastapi.responses import FileResponse, HTMLResponse
from fastapi.staticfiles import StaticFiles
from starlette.middleware.sessions import SessionMiddleware
from core.security.oauth import configure_oauth
from api.routers.auth import router as auth_router

app = FastAPI()

# Agrega middleware para manejar las sesiones
app.add_middleware(SessionMiddleware, secret_key="random_key")

# Configura OAuth
configure_oauth(app)

# Agrega el router de autenticación a la aplicación
app.include_router(auth_router, prefix="/api")


# Lista de servicios predefinidos
SERVICIOS = [
    {"nombre": "Plan básico", "descripcion": "Velocidad de descarga de hasta 25 Mbps", "precio": 30.0},
    {"nombre": "Plan estándar", "descripcion": "Velocidad de descarga de hasta 50 Mbps", "precio": 50.0},
    {"nombre": "Plan premium", "descripcion": "Velocidad de descarga de hasta 100 Mbps", "precio": 80.0}
]

# Ruta para servir la página principal
@app.get("/")
async def read_root():
    return FileResponse("templates/index.html")

# Ruta para servir la página de contratar servicios
@app.get("/contratar")
async def read_contratar():
    return FileResponse("templates/contratar.html")

# Ruta para obtener la lista de servicios
@app.get("/servicios")
async def get_servicios():
    return SERVICIOS

# Ruta para manejar la redirección después de contratar un servicio
@app.get("/contrato/{nombre_servicio}")
async def contratar_servicio(request: Request, nombre_servicio: str):
    # Puedes obtener más detalles del servicio según el nombre_servicio si lo necesitas
    servicio_contratado = next((servicio for servicio in SERVICIOS if servicio["nombre"] == nombre_servicio), None)
    if servicio_contratado:
        # Aquí puedes personalizar la página de contrato según el servicio contratado
        return FileResponse("templates/contrato.html")
    else:
        return {"error": "Servicio no encontrado"}

@app.get("/cont.html")
async def contrato(request: Request):
    servicio = request.query_params.get('servicio')
    return HTMLResponse(f"<h1>Contrato</h1><p>Servicio elegido: {servicio}</p>")

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="127.0.0.1", port=8000)
